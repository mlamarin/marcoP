[{"path":"https://mlamarin.github.io/marcoP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Lamarine. Author, maintainer.","code":""},{"path":"https://mlamarin.github.io/marcoP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lamarine M (2023). marcoP: Test. R package version 0.0.0.9000, https://mlamarin.github.io/marcoP/.","code":"@Manual{,   title = {marcoP: Test},   author = {Marc Lamarine},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://mlamarin.github.io/marcoP/}, }"},{"path":"https://mlamarin.github.io/marcoP/index.html","id":"marcop","dir":"","previous_headings":"","what":"Test ","title":"Test ","text":"marcoP test github deployment use later quartzbio.edp","code":""},{"path":"https://mlamarin.github.io/marcoP/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Test ","text":"usethis pkgdown gh (gh >= v1.2.1) gret gitcreds","code":""},{"path":"https://mlamarin.github.io/marcoP/index.html","id":"walktrough","dir":"","previous_headings":"","what":"WalkTrough","title":"Test ","text":"usethis: obtain template R package skeleton. pkgdown. usethis::use_pkgdown_github_pages(). need follow Managing Git(Hub) Credentials. use_github_pages(): prepares publish pkgdown site gh-pages branch use_github_action(“pkgdown”)","code":""},{"path":"https://mlamarin.github.io/marcoP/index.html","id":"dev","dir":"","previous_headings":"","what":"Dev","title":"Test ","text":"PkpTest","code":"# One time set-up with Git, Github, and Github Actions usethis::use_git(message = \"Initial commit\") usethis::use_github(private = FALSE) usethis::use_github_action(\"pkgdown\") usethis::use_pkgdown_github_pages()  # locally building site pkgdown::build_site()  # Install package devtools::install_github(\"FanWangEcon/PkgTestR\")"},{"path":"https://mlamarin.github.io/marcoP/reference/from_json.html","id":null,"dir":"Reference","previous_headings":"","what":"parse a JSON string — from_json","title":"parse a JSON string — from_json","text":"parse JSON string","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/from_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse a JSON string — from_json","text":"","code":"from_json(json, strip_comments = FALSE, ...)"},{"path":"https://mlamarin.github.io/marcoP/reference/from_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse a JSON string — from_json","text":"json JSON string. strip_comments whether strip comments, cf strip_comments() ... passed jsonlite::fromJSON","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/from_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse a JSON string — from_json","text":"decoded data structure, NA json NA, NULL json NULL","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/read_json.html","id":null,"dir":"Reference","previous_headings":"","what":"read a JSON file — read_json","title":"read a JSON file — read_json","text":"read JSON file","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/read_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a JSON file — read_json","text":"","code":"read_json(path, ...)"},{"path":"https://mlamarin.github.io/marcoP/reference/read_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a JSON file — read_json","text":"path path JSON config file ... Arguments passed from_json json JSON string. strip_comments whether strip comments, cf strip_comments()","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/read_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read a JSON file — read_json","text":"parsed JSON R data structure","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"currently just a wrapper around jsonlite::toJSON — to_json","title":"currently just a wrapper around jsonlite::toJSON — to_json","text":"currently just wrapper around jsonlite::toJSON","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"currently just a wrapper around jsonlite::toJSON — to_json","text":"","code":"to_json(..., pretty = TRUE)"},{"path":"https://mlamarin.github.io/marcoP/reference/to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"currently just a wrapper around jsonlite::toJSON — to_json","text":"... passed jsonlite::fromJSON pretty adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent.","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/write_json.html","id":null,"dir":"Reference","previous_headings":"","what":"write a JSON file, a wrapper around jsonlite::write_json with different defaults — write_json","title":"write a JSON file, a wrapper around jsonlite::write_json with different defaults — write_json","text":"write JSON file, wrapper around jsonlite::write_json different defaults","code":""},{"path":"https://mlamarin.github.io/marcoP/reference/write_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write a JSON file, a wrapper around jsonlite::write_json with different defaults — write_json","text":"","code":"write_json(data, path, pretty = TRUE, auto_unbox = TRUE, ...)"},{"path":"https://mlamarin.github.io/marcoP/reference/write_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write a JSON file, a wrapper around jsonlite::write_json with different defaults — write_json","text":"data data write path path JSON config file pretty adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent. auto_unbox whether vectors 1 element shoudl written scalars, .e \"string\" instead [\"string\"] ... passed jsonlite::write_json()","code":""},{"path":"https://mlamarin.github.io/marcoP/news/index.html","id":"marcop-0009000","dir":"Changelog","previous_headings":"","what":"marcoP 0.0.0.9000","title":"marcoP 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
